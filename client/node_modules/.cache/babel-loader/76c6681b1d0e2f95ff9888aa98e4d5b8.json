{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    put(fetchCollectionsFailure(err.message));\n  } // collectionRef.get().then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fet\n\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}\n;","map":{"version":3,"sources":["/Users/laszlo/Documents/Coding/Udemy Course/From Zero to Mastery/React/web-shop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollections","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACAT,IAAAA,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAH;AACH,GALD,CAKE,OAAMC,GAAN,EAAW;AACTZ,IAAAA,GAAG,CAACI,uBAAuB,CAACQ,GAAG,CAACC,OAAL,CAAxB,CAAH;AACH,GAR+B,CAS5B;AACA;AACA;;AACP;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,SAAS,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,gBAA1C,CAAf;AACH;AAAA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollections() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        put(fetchCollectionsSuccess(collectionsMap));\n    } catch(err) {\n        put(fetchCollectionsFailure(err.message));\n    }\n        // collectionRef.get().then(snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     dispatch(fet\n};\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections)\n};"]},"metadata":{},"sourceType":"module"}